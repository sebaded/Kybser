diff --git a/ref/indcpa.c b/ref/indcpa.c
index 9a78c09..e505173 100644
--- a/ref/indcpa.c
+++ b/ref/indcpa.c
@@ -86,7 +86,7 @@ static void unpack_sk(polyvec *sk, const uint8_t packedsk[KYBER_INDCPA_SECRETKEY
 static void pack_ciphertext(uint8_t r[KYBER_INDCPA_BYTES], polyvec *b, poly *v)
 {
   polyvec_compress(r, b);
-  poly_compress(r+KYBER_POLYVECCOMPRESSEDBYTES, v);
+  poly_tobytes(r+KYBER_POLYVECCOMPRESSEDBYTES, v);
 }
 
 /*************************************************
@@ -102,7 +102,7 @@ static void pack_ciphertext(uint8_t r[KYBER_INDCPA_BYTES], polyvec *b, poly *v)
 static void unpack_ciphertext(polyvec *b, poly *v, const uint8_t c[KYBER_INDCPA_BYTES])
 {
   polyvec_decompress(b, c);
-  poly_decompress(v, c+KYBER_POLYVECCOMPRESSEDBYTES);
+  poly_frombytes(v, c+KYBER_POLYVECCOMPRESSEDBYTES);
 }
 
 /*************************************************
diff --git a/ref/params.h b/ref/params.h
index 0802c74..66aea31 100644
--- a/ref/params.h
+++ b/ref/params.h
@@ -45,7 +45,7 @@
 #define KYBER_INDCPA_MSGBYTES       (KYBER_SYMBYTES)
 #define KYBER_INDCPA_PUBLICKEYBYTES (KYBER_POLYVECBYTES + KYBER_SYMBYTES)
 #define KYBER_INDCPA_SECRETKEYBYTES (KYBER_POLYVECBYTES)
-#define KYBER_INDCPA_BYTES          (KYBER_POLYVECCOMPRESSEDBYTES + KYBER_POLYCOMPRESSEDBYTES)
+#define KYBER_INDCPA_BYTES          (KYBER_POLYVECCOMPRESSEDBYTES + KYBER_POLYBYTES)
 
 #define KYBER_PUBLICKEYBYTES  (KYBER_INDCPA_PUBLICKEYBYTES)
 /* 32 bytes of additional space to save H(pk) */
diff --git a/ref/verify.c b/ref/verify.c
index 914ccd4..426e6ba 100644
--- a/ref/verify.c
+++ b/ref/verify.c
@@ -5,7 +5,7 @@
 /*************************************************
 * Name:        verify
 *
-* Description: Compare two arrays for equality in constant time.
+* Description: Compare two arrays for equality in constant time. (Now in linear time instead.)
 *
 * Arguments:   const uint8_t *a: pointer to first byte array
 *              const uint8_t *b: pointer to second byte array
@@ -16,12 +16,13 @@
 int verify(const uint8_t *a, const uint8_t *b, size_t len)
 {
   size_t i;
-  uint8_t r = 0;
-
-  for(i=0;i<len;i++)
-    r |= a[i] ^ b[i];
-
-  return (-(uint64_t)r) >> 63;
+  for(i=0;i<len;i++) {
+    if(a[i] != b[i]) {
+      return 1;
+      break;
+    }
+  }
+  return 0;
 }
 
 /*************************************************
